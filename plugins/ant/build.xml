<?xml version="1.0" ?>

<!--
 * This is the build file for light plugins framework 
 * Copyright Ideaconsult Ltd. (C) 2005-2008 
 *
 * Contact: nina@acad.bg
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * as published by the Free Software Foundation; either version 2.1
 * of the License, or (at your option) any later version.
 * All we ask is that proper credit is given for our work, which includes
 * - but is not limited to - adding the above copyright notice to the beginning
 * of your source code files, and to any copyright notice that you may distribute
 * with programs based on this work.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

*/

-->
<project basedir="../" default="all" name="nplugins">

	<property name="version" value="1.0.6" />
    <!-- compile options -->
     <property name="build.sysclasspath" value="ignore" />
     <property name="build.compiler" value="modern" />
     <property name="debug" value="off" />
     <property name="deprecation" value="off" />
     <property name="optimization" value="on" />

    <!-- Properties need to be setup !!!!!! -->

    <property name="dist" value="dist" />
    <property name="sourcedist.dir" value="sourcedist" />
    <property name="appdist.dir" value ="${dist}/nplugins-${version}" />

    <property name="src" value="src" />
    <property name="ant" value="ant" />
    <property name="build" value="build" />
    <property name="lib" value="lib" />

			<!-- Thawte freemail cert - used by sign task -->
    <property name="keystore" value="/src/certificates/keystore/keystore.ks" />

    <!-- Ant will ask for the alias and password
    <property name="alias" value="xxx" />
    <property name="storepass" value="xxxx" />
		-->
    <path id="classpath">

        <fileset dir="./lib/">
            <include name="*.jar"/>
        </fileset>

    </path>


    <target id="setupBuildDir" name="setupBuildDir">
            <tstamp />
            <mkdir dir="${dist}" />
            <mkdir dir="${appdist.dir}" />
            <mkdir dir="${appdist.dir}/bin" />
            <mkdir dir="${appdist.dir}/bin/ext" />
            <mkdir dir="${appdist.dir}/src" />
	        <mkdir dir="${appdist.dir}/doc" />

    </target>

    <target name="init" depends="setupBuildDir">
        <tstamp/>
    </target>


    <target name="clean" description="Removes build directories.">
        <delete dir="${build}"/>
        <delete dir="${sourcedist.dir}"/>
        <delete dir="${src}/doc"/>
    </target>


    <target name="prepare" depends="init, clean" description="Creates build directories.">
        <mkdir dir="${build}" />
    </target>

    <target name="build" depends="prepare" description="Compiles all Java files">
        <javac srcdir="src" destdir="${build}" deprecation="yes">
            <include name="**/*.java" />
            <classpath refid="classpath"/>
        </javac>
    </target>



	<target id="all" name="all" depends="appdist">
	</target>

    <target id="dist" name="dist" depends="build">
    <jar jarfile="${appdist.dir}/bin/nplugins-${version}.jar" compress="true"
		manifest="${src}/nplugins/core/MANIFEST.MFT" >
	<fileset dir="${build}">
		<includesfile name="${src}/nplugins.classes" />
    </fileset>
		<fileset dir="${src}">
			<includesfile name="${src}/nplugins.resources" />		    		
	    </fileset>    	
    </jar>
	</target>

    <target id="demo" name="demo" depends="build">
    <jar jarfile="${appdist.dir}/bin/ext/npdemo.jar" compress="true"
    	manifest="${src}/nplugins/demo/MANIFEST.MFT" >
	<fileset dir="${build}">
		<includesfile name="${src}/npdemo.classes" />
    </fileset>
    </jar>
	</target>


	<target id="sign" name="sign" >
			<input addproperty="alias" message="Enter Keystore alias"/>
	 	  <input addproperty="storepass" message="Enter Keystore password"/>


			<echo message="Using ${keystore}"/>
   		 <signjar	jar="${appdist.dir}/bin/nplugins-${version}.jar"
   						keystore="${keystore}"
   						alias="${alias}" storepass="${storepass}"
   						keypass="${storepass}"
   						verbose="false"/>

		 <signjar
				keystore="${keystore}"
				alias="${alias}" storepass="${storepass}"
				keypass="${storepass}"
			 	lazy="true"
			 	verbose="false" >

		 	   <fileset dir="${appdist.dir}/bin/ext" includes="**/*.jar" />
		</signjar>
	<!-- Lazy signing is used, so the files will only be signed if they are not already signed -->

		 <signjar
				keystore="${keystore}"
				alias="${alias}" storepass="${storepass}"
				keypass="${storepass}"
			 	lazy="true"
			 	verbose="false">

		 	   <fileset dir="${appdist.dir}/bin/${lib}" includes="**/*.jar" />
		</signjar>


	</target>


	<!-- srcdist target -->
	<target name="srcdist" description="Source distribution.">
		  <mkdir dir="${appdist.dir}/src" />
		<tstamp/>
		<property name="package" value ="${ant.project.name}-source-${version}_${DSTAMP}.zip" />

               <copy todir="${sourcedist.dir}/${src}">
                        <fileset dir="${src}" includes="*.javafiles" />
                        <fileset dir="${src}" includes="*.classes" />
                        <fileset dir="${src}" includes="*.set" />
                        <fileset dir="${src}" includes="**/*" />
                </copy>
         	<copy todir="${sourcedist.dir}/${ant}">
                        <fileset dir="${ant}" includes="build.xml" />
                        <fileset dir="${ant}" includes="javadoc.xml" />
                </copy>
                <mkdir dir="${sourcedist.dir}/${lib}" />
                <zip zipfile="${appdist.dir}/src/${package}" basedir="${sourcedist.dir}"  />
		<!--tar tarfile="${appdist.dir}/${package}" basedir="${sourcedist.dir}" compression="gzip" /-->
		<echo message="Source distribution ${srcDist} has been created." />
		<delete dir="${sourcedist.dir}"/>
	</target>

	<!-- appdist target -->
	<target name="appdist" description="Application distribution." depends="dist,srcdist,demo">
		<tstamp/>


		<property name="package_all" value ="${appdist.dir}.zip" />
	        <mkdir dir="${appdist.dir}" />
	        <mkdir dir="${appdist.dir}/bin" />
	        <mkdir dir="${appdist.dir}/src" />
	        <mkdir dir="${appdist.dir}/doc" />


            <mkdir dir="${appdist.dir}/bin/${lib}" />
            <copy todir="${appdist.dir}/bin/${lib}">
                        <fileset dir="${lib}" includes="**/*" />
            </copy>

		<!--tar tarfile="${package_all}" basedir="${appdist.dir}" compression="gzip" / -->
		<zip zipfile="${package_all}" basedir="${appdist.dir}"  />

		<echo message="Application distribution ${appdist.dir} has been created." />

	</target>


	<target name="javadoc">
	<javadoc access="public" author="true"
		classpath="lib/log4j.jar"
		destdir="doc"
		doctitle="nplugins " nodeprecated="false"
		nodeprecatedlist="false" noindex="false" nonavbar="false" notree="false"
		packagenames="nplugins"
		source="1.5"
		sourcepath="src" splitindex="true" use="true" version="true"/>
		<zip zipfile="${appdist.dir}-javadoc.zip" basedir="doc"  />
	</target>

    <target id="info" name="info" depends="check">
        <!-- Gives information about the building process. -->
        <echo message="Platform:" />
        <echo message="             OS: ${os.name}" />
        <echo message="   Architecture: ${os.arch}" />
        <echo message="        Version: ${os.version}" />
        <echo message=" Mac OS/X found: ${isMacOsX}" />
        <echo message="" />
        <echo message="Java/Ant Environment:" />
        <echo message="   Java version: ${java.version}" />
        <echo message="    Java vendor: ${java.vendor}" />
        <echo message="       Java dir: ${java.home}" />
        <echo message="   Java ext dir: ${java.ext.dirs}" />
        <echo message="    Ant version: ${ant.version}" />
        <echo message="    ${ANT_HOME}: ${ant.home}" />
        <echo message="       hasAnt16: ${hasAnt16}" />
        <echo message="" />
        <echo message="Compiling:" />
        <echo message="            for: ${build.compiler}" />
        <echo message="          debug: ${debug}" />
        <echo message="    deprecation: ${deprecation}" />
        <echo message="   optimization: ${optimization}" />
        <echo message="" />
        <echo message="Targets:" />
        <echo message="info:		this page" />
        <echo message="clean:		cleanup" />
        <echo message="dist:		nplugins.jar" />
        <echo message="appdist(default):		nplugins.jars, source distribution" />
        <echo message="srcdist:		Source distribution" />
        <echo message="javadoc:		Javadoc" />
    </target>

	<target id="help" name="help" >
        <echo message="Usage::" />
        <echo message="ant all (default) - compiles and builds everything. The distribution is in dist/nplugins-${version} folder. " />
        <echo message="ant appdist       - builds binary and source distribution (included in default build)" />
        <echo message="ant srcdist       - builds only source distribution (included in default build)" />
        <echo message="ant plugin-demo   - builds demo plugin (not included in default build)" />
        <echo message="ant clean         - deletes compiled classes" />
        <echo message="ant help          - this screen" />
        <echo message="ant -buildfile javadoc.xml  - builds javadoc (to be found in dist/nplugins-${version}/doc folder" />
        </target>

    <target id="checkPlatforms" name="checkPlatforms">
        <condition property="isMacOsX">
            <and>
                <os family="mac"/>
                <os family="unix"/>
            </and>
        </condition>
    </target>

    <target id="check" name="check" depends="checkPlatforms">
        <available classname="junit.framework.TestCase"
            classpath="${ant.home}/lib/junit.jar"
            property="junit.present"/>
        <condition property="hasAnt16">
            <contains string="${ant.version}" substring="1.6"/>
        </condition>
        <condition property="isJava13">
            <contains string="${java.version}" substring="1.3"/>
        </condition>
        <condition property="isJava14">
            <contains string="${java.version}" substring="1.4"/>
        </condition>
        <condition property="isJava15">
            <contains string="${java.version}" substring="1.5"/>
        </condition>
        <condition property="isJava14+">
            <or>
                <contains string="${java.version}" substring="1.4"/>
                <contains string="${java.version}" substring="1.5"/>
            </or>
        </condition>
        <condition property="isJava15">
            <contains string="${java.version}" substring="1.5"/>
        </condition>

    </target>


</project>


