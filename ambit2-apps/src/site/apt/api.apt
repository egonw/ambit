 -----
 OpenTox background
 -----
 Background
 -----
 Oct 2010

 [{{{http://opentox.org}OpenTox}}] European Commission Framework Program 7 funded project, 
 aims to develop distributed framework for predictive toxicology. 
 The building blocks considered are : data, chemical structures, algorithms and models. 
 The framework allows to build models, apply models, validate models, access and query data in various ways.  
 Technologies used are {{{./rest.html}REST style web services}}  and {{{./rdf.html}W3C Resource Description Framework}} for description of services.

 []
 
 [API] Application Programming Interface 

	* The way applications talk to each other
	
	* The way developers talk to applications

 []
 
 [OpenTox API] The Application Programming Interface of OpenTox framework {{{http://opentox.org/dev/apis/api-1.2}http://opentox.org/dev/apis/api-1.2}}
 
 []

 [OpenTox components] OpenTox considers the following set of entities as essential building blocks of a predictive toxicology framework:

	* Chemical compound structure

	* Chemical compound properties and identifiers
	 
	* Dataset of chemical compounds and various properties (measured or calculated)
	
	* Algorithms
	 
     * Data processing algorithms 
	
	 * Algorithms generating certain values, based on chemical structure (e.g. descriptor calculation)
	
	 * Data preprocessing (e.g. Principal component analysis, feature selection)
	
	 * Structure processing (e.g. structure optimization)
	
	 * Algorithms, relating set of structures to another set of structures (e.g. similarity search or metabolite generation)
	
	 * Machine learning algorithms
	
	   * Supervised (e.g. Regression, Classification)
	
	   * Unsupervised (e.g.  Clustering )
	
     * Prediction algorithms, defined by experts (e.g. series of structural alerts, defined by human experts , not derived by learning algorithms)
    
   * Models
	
	Models are generated by applying machine learning algorithms to specific dataset , given specific parameters.
	In case of expert defined rules, models are generated by the corresponding algorithms, without requirement for a training dataset.
	
   * Validation
	
	Validation provides procedures independent of model building facilities  (e.g. crossvalidation)  and generates relevant statistics.
	
   * Reports
	
	Various types of reports might be generated, using building blocks listed (e.g. validation report can be generated using validation object, a model and a dataset).
 
  In addition, the following components are introduced in order to address specific challenges in IT implementation, for example handling of time consuming calculations or access to protected resources
	
   * Asynchronous Task
	
   * Ontology service
	
   * Authentication and authorization

 []

