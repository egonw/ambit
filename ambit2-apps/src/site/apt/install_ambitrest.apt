 -----
 Install your own {AMBIT REST Web services} 
 -----
 Nina Jeliazkova
 -----
 2011/08/20
 -----

Install your own {AMBIT REST Web services} 
	
	[[1]] Requirements: Java Runtime Environment 6.x, MySQL and Tomcat application server, or compatible servlet container
	
	[[2]] Download web application archive (war) file and run your own instance of Ambit REST services ambit2.war 2.3.0-SNAPSHOT.
	
	[[3]] Deploy the war file to the servlet container
	
	[[4]] Ensure mysql is running at the default port
	
	[[5]] This release comes without an embedded database. 
	Create an empty database by issuing HTTP POST request to {{{http://localhost:8080/ambit2/admin/database}http://yourhost:8080/ambit2/admin/database}} URI, 
	as in the following {{{http://curl.haxx.se/}cURL}} command:
	
+---------------------------------    
  curl -X POST -d "dbname=ambit2" -d "user=mysqladminuser" -d "pass=mysqladminpass" \
  	http://yourhost:8080/ambit2/admin/database
+---------------------------------	
	 
	or if using AA enabled ambit2.war, provide an OpenSSO token 

+---------------------------------    
  curl -X POST -d "dbname=ambit2" -d "user=mysqladminuser" -d "pass=mysqladminpass" \
  	-H "subjectid:OPENSSOTOKEN" http://yourhost:8080/ambit2/admin/database 
+---------------------------------	

   or navigate to {{{http://localhost:8080/ambit2/admin/admin/database}http://localhost:8080/ambit2/admin/admin/database}} and use the {{{[./images/create_db.png}web form}}.
  
	Note: <mysqladminuser> should be existing MySQL user with sufficient privileges to create a database. A database can be created only if it does not exist.
	
	[[6]] If successfull, reading the URL {{{http://localhost:8080/ambit2/admin/database}http://yourhost:8080/ambit2/admin/database}} will return the database name and some other info.
	
	[[7]] You might import your own data by POSTing to {{{http://localhost:8080/ambit2/dataset}http://yourhost:8080/ambit2/dataset}}
	
	[[8]] All services offer HTML representation, as well as RDF
	
	[[9]] Documentation and exercises (under development) can be found at 
	{{{http://opentox.org/dev/apis/api-1.1}OpenTox site}}, 
	{{{http://www.ideaconsult.net/downloads/echeminfo/OpenTox-exercises.pdf}OpenTox exercises}} , 
	{{{http://www.ideaconsult.net/downloads/echeminfo/OpenTox-API.pdf}OpenTox API with examples}},
	{{{development@opentox.org}OpenTox development list}} or {{{http://www.ideaconsult.net/web/ngn/blogs/}Ideaconsult blogs}}.
	 
{Protected AMBIT web services}

	Access to AMBIT web services can be controlled via 
	{{{http://opentox.org/dev/apis/api-1.2/AA}OpenTox Authentication and Authorization}} infrastructure. 
	Security tokens are obtained after log in into the {{{http://forgerock.com/openam.html}OpenAM}} service at <http://opensso.in-silico.ch/auth/authenticate>.

*Code

    Java OpenTox AA client library is {{{./download_aaclient.html}available}}.

*Accounts    

	OpenTox user accounts can be obtained via free registration at {{{http://opentox.org/join_form}OpenTox site}}.
	
* Logging in
	
+---------------------------
	curl -X POST -d "username=YOUR-OPENTOX-USER" -d "password=YOUR-OPENTOX-PASSWORD" \
		http://opensso.in-silico.ch/auth/authenticate 
+---------------------------

	AMBIT services offer log in via its {{{http://apps.ideaconsult.net:8080/ambit2/opentoxuser}web page}}.
	
	The relevant link for a local installation is {{{http://localhost:8080/ambit2/opentoxuser}http://yourhost:8080/ambit2/opentoxuser}}.

[./images/login.png] Log in web page	
	
 	 
*Protecting resources

	After deploying AA enabled AMBIT services, <</dataset>> resources are not accessible. An access policy has to be defined, as explained below.

	Navigate to {{{http://localhost:8080/ambit2/admin/policy}http://localhost:8080/ambit2/admin/policy}} and use the web interface to create new policies.
	Replace <<http://localhost:8080>> with your real URI!
	
[./images/create_policy.png] Create access policy for an URI. 
	
	Alternatively, use {{{http://opentox.org/dev/apis/api-1.2/AA}OpenTox API}} or the Java library above.
 	 
	On data upload the new datasets are assigned a default policy, allowing read write access only to the user, who has uploaded the dataset.
	Additional policies can be defined as above.
	